<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.myapp.mapper.AdminMapper">

    <!-- 전체 회원 조회: 페이징 처리를 포함 -->
    <select id="selectAllMember" resultType="org.zerock.myapp.domain.MemberVO">
        SELECT *
        FROM member
        ORDER BY id DESC
        OFFSET #{offset} row fetch next #{perPage} row only
    </select>

    <!-- 이름 또는 이메일 또는 닉네임으로 회원 검색: 옵션에 따라 검색 .페이징 처리 포함. -->
    <select id="selectMemberNameOrEmail" resultType="org.zerock.myapp.domain.MemberVO">
        SELECT * FROM member
        WHERE
        <if test="params.searchOption == 'name'">
            uname LIKE '%'||#{params.searchValue}||'%'
        </if>
        <if test="params.searchOption == 'email'">
            email LIKE '%'||#{params.searchValue}||'%'
        </if>
        <if test="params.searchOption == 'nickname'">
            nickname LIKE '%'||#{params.searchValue}||'%'
        </if>
        ORDER BY id DESC
        OFFSET #{offset} row fetch next #{perPage} row only
    </select>

    <!-- 특정 회원 상세 정보 조회: ID를 기반으로 특정 회원의 상세 정보를 조회합니다. -->
    <select id="selectDetailMember" resultType="org.zerock.myapp.domain.MemberVO">
        SELECT *
        FROM member
        WHERE id = #{dto.id}
    </select>

    <!-- 회원 등록: 새로운 회원 정보를 데이터베이스에 등록 -->
    <insert id="insertMember">
        INSERT INTO MEMBER (
        name,
        email,
        nickname,
        password,
        phone_num
        )
        VALUES(
        #{dto.name},
        #{dto.email},
        #{dto.nickname},
        #{dto.password},
        #{dto.phoneNum}
        )
    </insert>

    <!-- 회원 정보 업데이트: 기존 회원의 정보를 업데이트 -->
    <update id="updateMember">
        UPDATE member
        <set>
            <if test="nickname != null and nickname != ''">
                nickname = #{dto.nickname},
            </if>
            <if test="address != null and address != ''">
                address = #{dto.address},
            </if>
            <if test="phoneNum != null and phoneNum != ''">
                phone_num = #{dto.phoneNum},
            </if>
            <if test="birthday != null and birthday != ''">
                birthday = #{dto.birthday},
            </if>
            <if test="role != null and role != ''">
                role = #{dto.role},
            </if>
        </set>
        WHERE id = #{dto.id}
    </update>

    <!-- 회원 삭제: ID를 기반으로 특정 회원 정보를 삭제 -->
    <delete id="deleteMember">
        delete from member
        where id = #{dto.id}
    </delete>

    <!-- 전체 회원 수 조회: 데이터베이스에 등록된 전체 회원 수를 조회 -->
    <select id="totalMemberCount" resultType="Integer">
        SELECT count(id)
        FROM member
    </select>

    <!-- 검색된 회원 수 조회: 검색 옵션에 따라 검색된 회원의 수를 조회 -->
    <select id="selectTotalSearchCount" resultType="Integer">
        SELECT count(id) FROM member
        WHERE
        <if test="params.searchOption == 'name'">
            uname LIKE '%'||#{params.searchValue}||'%'
        </if>
        <if test="params.searchOption == 'email'">
            email LIKE '%'||#{params.searchValue}||'%'
        </if>
        <if test="params.searchOption == 'nickname'">
            nickname LIKE '%'||#{params.searchValue}||'%'
        </if>
    </select>

</mapper>