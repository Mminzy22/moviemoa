<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.myapp.mapper.MemberMapper">

    <!-- 회원가입 -->
    <insert id="registrationMember">
        INSERT INTO MEMBER (
        name,
        email,
        nickname,
        password,
        phone_num
        )
        VALUES(
        #{dto.name},
        #{dto.email},
        #{dto.nickname},
        #{dto.password},
        #{dto.phoneNum}
        )
    </insert>

    <!--DB에 기존에 입력된 email이 있는지 확인-->
    <select id="checkDupleEmail" resultType="Integer">
        SELECT
            count(email)
        FROM
            member
        WHERE
            email = #{email}
    </select>

    <!-- 로그인 -->
    <select id="loadUserByUserEmail" resultType="org.zerock.myapp.domain.MemberVO">
        SELECT
            *
        FROM
            member
        WHERE email= #{email}
    </select>

    <!-- 회원의 최근 로그인 날짜 입력 -->
    <update id="lastLoginDate">
        UPDATE member
        SET last_login_date = CURRENT_TIMESTAMP
        WHERE email = #{email}
    </update>

    <!-- 이메일 찾기 -->
    <select id="findUserEmail" parameterType="map" resultType="string">
        SELECT email
        FROM member
        WHERE name = #{name}
        AND phone_num = #{phoneNum}
    </select>

    <!-- 비밀번호 찾기 -->
    <select id="findUserPassword" resultType="org.zerock.myapp.domain.MemberVO">
        SELECT
            *
        FROM
            member
        WHERE
        email = #{email}
        AND name = #{name}
        AND phone_num = #{phoneNum}
    </select>

    <!-- 비밀번호 변경 -->
    <update id="updateUserByPassword">
        UPDATE member
        SET password = #{password}
        WHERE id = #{id}
    </update>

    <!-- 특정 회원정보 조회 -->
    <select id="findUser" resultType="org.zerock.myapp.domain.MemberVO">
        SELECT
        *
        FROM
        member
        WHERE id= #{id}
    </select>

    <!-- 특정 회원정보 변경 -->
    <update id="updateMypageMember">
        UPDATE member
        <set>
            <if test="changePW != null and changePW != ''">
                password = #{changePW},
            </if>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="phoneNum != null and phoneNum != ''">
                phone_num = #{phoneNum},
            </if>
            <if test="birthday != null and birthday != ''">
                birthday = #{birthday},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 회원탈퇴 -->
    <delete id="deleteMyPageMember">
        DELETE FROM member
        WHERE id = #{id}
    </delete>

    <!-- 특정 회원의 게시글 조회 (마이페이지 나의 게시글) -->
    <select id="findMyBoardList" resultType="org.zerock.myapp.domain.BoardAndReplyCntVO">
        SELECT
        Board.*,
        Movies.title AS movie_title,
        board_kategories.name AS kategorie_name,
        Member.nickname,
        COALESCE(COUNT(Board_reply.id), 0) AS reply_count
        FROM
        Board
        LEFT JOIN Movies ON Board.movie_id = Movies.id
        LEFT JOIN board_kategories ON Board.kategorie_id = board_kategories.id
        LEFT JOIN Member ON Board.member_id = Member.id
        LEFT JOIN Board_reply ON Board.id = Board_reply.board_id
        WHERE
        Board.member_id = #{memberId}
        GROUP BY Board.id, Movies.title, board_kategories.name, Member.nickname
        ORDER BY Board.id DESC
        OFFSET #{offset} ROW FETCH NEXT #{perPage} ROW ONLY
    </select>

    <!-- 특정 멤버가 작성한 게시글의 총 수를 반환 -->
    <select id="totalMyBoardCount" resultType="Integer">
        SELECT COUNT(id)
        FROM board
        WHERE member_id = #{memberId}
    </select>

    <!-- 특정 회원의 댓글 조회 -->
    <select id="findMyReplyList" resultType="org.zerock.myapp.domain.BoardReplyAndBoardTitleVO">
        SELECT
        board_reply.*,
        member.nickname,
        Board.title AS Board_title,
        Movies.title AS movie_title
        FROM
        board_reply
        LEFT JOIN member ON board_reply.member_id = member.id
        LEFT JOIN Board ON Board_reply .board_id= Board.id
        LEFT JOIN Movies ON Board.movie_id = Movies.id
        WHERE
        board_reply.member_id = #{memberId}
        ORDER BY
        ID DESC
        OFFSET #{offset} ROW FETCH NEXT #{perPage} ROW ONLY
    </select>

    <!-- 특정 멤버가 작성한 게시글의 총 수를 반환 -->
    <select id="totalMyReplyCount" resultType="Integer">
        SELECT
        COUNT(id)
        FROM
        board_reply
        WHERE
        member_id = #{memberId}
    </select>

    <!-- 특정 멤버가 검색한 영화기록 조회 -->
    <select id="findSearchMovie" resultType="org.zerock.myapp.domain.MovieVO">
        SELECT
        movies.*
        FROM
        movies
        LEFT JOIN search_history ON movies.id = search_history.movie_id
        WHERE
        search_history.member_id = #{memberId}
        ORDER BY
        search_history.search_date desc
    </select>

    <!-- 특정 멤버가 검색한 영화기록 선택 삭제 -->
    <delete id="deleteHistory">
        DELETE FROM search_history
        WHERE member_id = #{memberId}
        AND movie_id IN
        <foreach item="movieId" collection="movieIds" open="(" separator="," close=")">
            #{movieId}
        </foreach>
    </delete>

</mapper>